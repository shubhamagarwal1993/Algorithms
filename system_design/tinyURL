// Features of tinyURL
  - Shortening a URL to a tinyURL (people can specify their own URL or short URL, it can all be auto-generated)
  - Retrieving the URL associated with a tinyURL

  - caching - if a tinyURL is hit a lot of times suddenly and others are stale
  - Analytics for a URL (keep track of any stats on the clicks, they can be out of data by a few minutes)
  - link management (will the URLs stay alive forever, or do they have a timeout)
  - memory available (process a max of 1 million new URLs per day - check how much space your system needs)
  - user accounts

make a database table
|-- id --|-- URL -- |
|        |          |
|        |          |
|--------|----------|

Use base 62 - make a map
 0 -> a
 1 -> b
.. -> .
25 -> z
26 -> A
51 -> Z
52 -> 0
61 -> 9

Steps:
- take user given URL
- insert in db and get id from db
- convert id to base 62
    E.g id = 125 in decimal (base 10)
    convert to base 62 -> 21 -> cb
    Array convertDecimalToBase(int num, int base) {
        int digits = [];

        while(num > 0) {
            int remainder = num % base;
            digits.push(remainder);
            num = num / 62;
        }

        // stored in revere order as remainder is pushed in first
        digits = digits.reverse();
    }
- thus, tinyURL becomes www.domain.com/cb

Now, converting a tinyURL to URL
- take user given tinyURL
- get hash -> cb in this case
- convert it to decimal
    E.g. id = cb in base 62
    convert to base 10 -> 21 -> cb
    int convertBaseToDecimal(int[] num, int base) {
        int sum = 0;

        for(int i = 0; i < num.length(); i++) {
            sum = sum + (num[i]*pow(base, num.length() - 1 - i));
        }

        return sum;
    }
- now we have the id to look up in the db. Do Where id=convertBaseToDecimal(....);
- this gives us original URL
